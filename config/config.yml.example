---
# 應用程式基本設定
app:
  name: "台南議會觀測機器人"
  description: "台南市議會會議記錄檢索系統"

# 平台設定 (v2.0)
platforms:
  line:
    enabled: true
    channel_access_token: ${LINE_CHANNEL_ACCESS_TOKEN}
    channel_secret: ${LINE_CHANNEL_SECRET}
  
  discord:
    enabled: false
    bot_token: ${DISCORD_BOT_TOKEN}
  
  telegram:
    enabled: false
    bot_token: ${TELEGRAM_BOT_TOKEN} 

# AI 模型配置
llm:
  # 主要提供商: openai, anthropic, gemini, ollama, huggingface
  provider: openai
  # 備用提供商 (自動故障轉移)
  fallback_providers: [anthropic, gemini, huggingface]
  # 模型選擇策略: primary_with_fallback, load_balance, cost_optimize
  strategy: primary_with_fallback
  # 健康檢查間隔 (秒)
  health_check_interval: 300
  # 重試次數
  retry_attempts: 3

# OpenAI 設定
openai:
  api_key: sk-proj-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  assistant_id: asst_xxxxxxxxxxxxxxxxxxxxxxxx
  # 可選設定
  base_url: https://api.openai.com/v1
  model: gpt-4
  temperature: 0.1
  max_tokens: 4000

# Anthropic Claude 設定
anthropic:
  api_key: sk-ant-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  model: claude-3-sonnet-20240229
  max_tokens: 4000
  temperature: 0.1

# Google Gemini 設定
gemini:
  api_key: AIzaSyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  model: gemini-pro
  temperature: 0.1
  corpus_name: default-corpus
  base_url: https://generativelanguage.googleapis.com

# Ollama 本地模型設定
ollama:
  base_url: http://localhost:11434
  model: llama2
  temperature: 0.1

# Hugging Face 設定
huggingface:
  api_key: ${HUGGINGFACE_API_KEY}
  # 主要聊天模型 (2025年最佳性能模型)
  model_name: "meta-llama/Llama-4-Scout-17B-16E-Instruct"
  # API 類型: inference_api, serverless, dedicated
  api_type: "inference_api"
  base_url: "https://api-inference.huggingface.co"
  # 備用模型列表 (按性能排序 - 2025年更新)
  fallback_models:
    - "meta-llama/Llama-4-Maverick-17B-128E-Instruct"  # Llama 4 旗艦模型
    - "mistralai/Magistral-Small-2506"                  # Mistral 2025最新推理模型
    - "meta-llama/Llama-3.1-8B-Instruct"               # 穩定的2024旗艦
    - "mistralai/Mistral-Nemo-Instruct-2407"           # Mistral 12B 高性能
    - "mistralai/Mistral-7B-Instruct-v0.3"             # 輕量級備選
    - "meta-llama/Llama-3.2-3B-Instruct"               # 快速響應備選
  # 功能專用模型 (2024年最佳)
  embedding_model: "sentence-transformers/all-MiniLM-L6-v2"
  speech_model: "openai/whisper-large-v3"
  image_model: "stabilityai/stable-diffusion-xl-base-1.0"
  # 生成參數 (針對 Llama 3.1 優化)
  temperature: 0.7
  max_tokens: 1024
  timeout: 90

# RAG 檢索增強生成設定
rag:
  enabled: true
  chunk_size: 1000
  chunk_overlap: 100
  top_k: 3
  similarity_threshold: 0.1

# 功能開關
features:
  audio_transcription: true
  image_generation: false
  rag_search: true
  multi_provider: false 

db:
  host: ${DB_HOST}
  port: ${DB_PORT}
  db_name: ${DB_NAME}
  user: ${DB_USER}
  password: ${DB_PASSWORD}
  sslmode: ${DB_SSLMODE}
  sslrootcert: ${DB_SSLROOTCERT}
  sslcert: ${DB_SSLCERT}
  sslkey: ${DB_SSLKEY} 

text_processing:
  post-replacements:
    - pattern: ""
      replacement: ""
    - pattern: ""
      replacement: ""
  preprocessors:
    - type: "replace_date_string"

# 日誌配置
log_level: DEBUG  # DEBUG, INFO, WARNING, ERROR, CRITICAL
log_format: simple  # simple 或 structured
logfile: ./logs/chatbot.log

# 測試介面認證設定
# Security Best Practices (安全最佳實踐):
# 1. Development (開發環境): 可使用簡單密碼進行測試
# 2. Production (生產環境): 強烈建議使用環境變數設定安全密碼
#    設定方式：
#    - Linux/Mac: export TEST_PASSWORD="your_secure_password_here"
#    - Windows: set TEST_PASSWORD=your_secure_password_here
#    - Docker: -e TEST_PASSWORD="your_secure_password_here"
#    - 在生產環境中絕不要在配置文件中使用明文密碼！
auth:
  # 認證方式: simple_password, basic_auth, token
  method: simple_password
  
  # 簡單密碼認證 (開發環境用)
  # 生產環境請使用環境變數 TEST_PASSWORD 覆蓋此設定
  password: test123
  
  # HTTP Basic Auth 設定
  username: admin
  
  # API Token 認證
  # 生產環境請使用環境變數 TEST_API_TOKEN 覆蓋此設定
  api_token: your_secure_api_token_here
  
  # Session 設定
  # 生產環境請使用環境變數 TEST_SECRET_KEY 覆蓋此設定
  secret_key: your_secret_key_for_sessions_here
  token_expiry: 3600  # Token 有效期（秒）

# 安全配置 - 2024 年最佳實踐
security:
  # 安全標頭配置
  headers:
    enabled: true  # 啟用安全標頭
    force_https: false  # 不強制 HTTPS（支援測試環境）
    enable_hsts: false  # 不啟用 HSTS（測試友善）
    debug_headers: false  # 是否記錄詳細的安全標頭日誌
    
  # CORS 跨域配置
  cors:
    enabled: false  # 啟用 CORS 支援
    allowed_origins: []  # 允許的來源，空陣列表示不限制
    # 範例: ["https://example.com", "https://app.example.com"]
    allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allowed_headers: ["Content-Type", "Authorization", "X-Requested-With", "X-CSRF-Token"]
    allow_credentials: true
    max_age: 86400  # 預檢請求快取時間（秒）
    
  # 速率限制配置
  rate_limiting:
    enabled: true
    general_rate_limit: 60  # 一般端點每分鐘請求數
    webhook_rate_limit: 300  # Webhook 端點每分鐘請求數
    test_endpoint_rate_limit: 10  # 測試端點每分鐘請求數
    
  # 內容安全配置
  content:
    max_message_length: 5000  # 訊息最大長度（測試和一般訊息相同）
    enable_input_sanitization: true  # 啟用針對輸入內容之惡意程式碼之清理機制
    
  # 監控和日誌
  monitoring:
    log_security_events: true  # 記錄安全事件
    enable_request_logging: true  # 啟用請求日誌
    enable_security_report: true  # 開發環境啟用安全報告端點

# 日誌配置
log_level: DEBUG  # DEBUG, INFO, WARNING, ERROR, CRITICAL
log_format: simple  # simple 或 structured
logfile: ./logs/chatbot.log

commands:
  help: "這裡是台南議會觀測機器人，目前已經輸入了台南市議會第四屆公開議事錄中的會議逐字稿，請輸入您的問題，以便我檢索逐字稿內容來回應您。\n\n其他命令：\n- 重設聊天內容：/reset\n- 查詢捐款資訊：/donate\n- 分享本聊天機器人：/share\n- 查看原始碼：/sourcecode"
  donate: "歡迎捐款支持台南新芽，捐款網址：\nhttps://bit.ly/3RBvPyZ"
  share: "歡迎分享本聊天機器人給朋友玩玩看：\nhttps://line.me/R/ti/p/%40343rptda"
  sourcecode: "本機器人原始碼：\nhttps://github.com/tainansprout/tainan-city-council-watchbot/"
